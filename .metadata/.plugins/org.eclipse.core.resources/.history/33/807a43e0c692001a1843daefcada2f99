/**
 * 
 */
package com.co.masivian.core;

import com.co.masivian.util.PrinterConstantes;

/**
 * @author erick
 *
 */
public class Printer {
	/* Declaracion de variables necesarias para la ejecucion del programa **/
	int P[] = new int[PrinterConstantes.getM() + 1];
	int C;
	int J = 1;
	int K = 1;
	boolean JPRIME;
	int N = 0;
	int MULT[] = new int[PrinterConstantes.getOrdmax() + 1];
	int ord = PrinterConstantes.getOrd();
	int square = PrinterConstantes.getSquare();

	public void calcularPrinter() {
		while (K < PrinterConstantes.getM()) {
			do {
				J += 2;
				if (J == PrinterConstantes.getSquare()) {
					ord++;
					square = P[ord] * P[ord];
					MULT[ord - 1] = J;
				}
				N = 2;
				JPRIME = true;
				while (N < ord && JPRIME) {
					while (MULT[N] < J)
						MULT[N] += P[N] + P[N];
					if (MULT[N] == J)
						JPRIME = false;
					N++;
				}
			} while (!JPRIME);
			K++;
			P[K] = J;
		}
		PAGENUMBER = 1;
		PAGEOFFSET = 1;
		while (PAGEOFFSET <= M) {
			System.out.print("The First ");
			System.out.print(Integer.toString(M));
			System.out.print(" Prime Numbers === Page ");
			System.out.print(Integer.toString(PAGENUMBER));
			System.out.println("\n");
			for (ROWOFFSET = PAGEOFFSET; ROWOFFSET <= PAGEOFFSET + RR - 1; ROWOFFSET++) {
				for (C = 0; C <= CC - 1; C++)
					if (ROWOFFSET + C * RR <= M)
						System.out.printf("%10d", P[ROWOFFSET + C * RR]);
				System.out.println();
			}
			System.out.println("\f");
			PAGENUMBER++;
			PAGEOFFSET += RR * CC;
		}
	}
}
